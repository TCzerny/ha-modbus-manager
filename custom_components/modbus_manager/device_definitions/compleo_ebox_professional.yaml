# Configuration for Compleo eBox Professional charging station

registers:
  read:
    # Device Information
    - { name: "device_type", address: 0, type: "uint16", translation_key: "sensor.device.info.type", entity_category: "diagnostic" }
    - { name: "serial_number", address: 2, type: "string", count: 8, translation_key: "sensor.device.info.serial_number", entity_category: "diagnostic" }
    - { name: "firmware_version", address: 10, type: "uint16", scale: 0.01, translation_key: "sensor.device.info.firmware_version", entity_category: "diagnostic" }
    
    # Charging Status
    - { name: "charging_status", address: 100, type: "uint16", translation_key: "sensor.charging.status.state", entity_category: "diagnostic" }
    - { name: "plug_locked", address: 101, type: "uint16", translation_key: "sensor.charging.status.plug_locked", entity_category: "diagnostic" }
    - { name: "vehicle_connected", address: 102, type: "uint16", translation_key: "sensor.charging.status.vehicle_connected", entity_category: "diagnostic" }
    
    # Power Data
    - { name: "current_power", address: 200, type: "uint32", unit_of_measurement: "W", device_class: "power", state_class: "measurement", scale: 1, swap: "word", translation_key: "sensor.charging.power.active" }
    - { name: "current_amperage", address: 202, type: "uint16", unit_of_measurement: "A", device_class: "current", state_class: "measurement", scale: 0.1, translation_key: "sensor.charging.electric.current" }
    - { name: "maximum_amperage", address: 203, type: "uint16", unit_of_measurement: "A", device_class: "current", state_class: "measurement", scale: 0.1, translation_key: "sensor.charging.electric.current_limit" }
    
    # Phase Measurements
    - { name: "voltage_l1", address: 300, type: "uint16", unit_of_measurement: "V", device_class: "voltage", state_class: "measurement", scale: 0.1, translation_key: "sensor.grid.electric.voltage_l1" }
    - { name: "current_l1", address: 301, type: "uint16", unit_of_measurement: "A", device_class: "current", state_class: "measurement", scale: 0.1, translation_key: "sensor.grid.electric.current_l1" }
    - { name: "voltage_l2", address: 302, type: "uint16", unit_of_measurement: "V", device_class: "voltage", state_class: "measurement", scale: 0.1, translation_key: "sensor.grid.electric.voltage_l2" }
    - { name: "current_l2", address: 303, type: "uint16", unit_of_measurement: "A", device_class: "current", state_class: "measurement", scale: 0.1, translation_key: "sensor.grid.electric.current_l2" }
    - { name: "voltage_l3", address: 304, type: "uint16", unit_of_measurement: "V", device_class: "voltage", state_class: "measurement", scale: 0.1, translation_key: "sensor.grid.electric.voltage_l3" }
    - { name: "current_l3", address: 305, type: "uint16", unit_of_measurement: "A", device_class: "current", state_class: "measurement", scale: 0.1, translation_key: "sensor.grid.electric.current_l3" }
    
    # Energy Meters
    - { name: "energy_current_session", address: 400, type: "uint32", unit_of_measurement: "kWh", device_class: "energy", state_class: "total", scale: 0.1, swap: "word", translation_key: "sensor.charging.energy.session" }
    - { name: "energy_total", address: 402, type: "uint32", unit_of_measurement: "kWh", device_class: "energy", state_class: "total_increasing", scale: 0.1, swap: "word", translation_key: "sensor.charging.energy.total" }
    
    # Temperatures
    - { name: "temperature_internal", address: 500, type: "int16", unit_of_measurement: "°C", device_class: "temperature", state_class: "measurement", scale: 0.1, translation_key: "sensor.device.temperature.internal" }
    - { name: "temperature_plug", address: 501, type: "int16", unit_of_measurement: "°C", device_class: "temperature", state_class: "measurement", scale: 0.1, translation_key: "sensor.device.temperature.plug" }
    
    # Status and Errors
    - { name: "error_code", address: 600, type: "uint16", translation_key: "sensor.device.status.error_code", entity_category: "diagnostic" }
    - { name: "warning_code", address: 601, type: "uint16", translation_key: "sensor.device.status.warning_code", entity_category: "diagnostic" }

  write:
    # Control Registers
    - { name: "enable_charging", address: 1000, type: "uint16", translation_key: "register.charging.control.enable", entity_category: "config" }
    - { name: "max_charging_current", address: 1001, type: "uint16", translation_key: "register.charging.control.current_limit", entity_category: "config" }
    - { name: "start_stop_charging", address: 1002, type: "uint16", translation_key: "register.charging.control.start_stop", entity_category: "config" }
    - { name: "unlock_plug", address: 1003, type: "uint16", translation_key: "register.charging.control.unlock_plug", entity_category: "config" }

polling:
  fast:
    interval: 10
    registers: ["charging_status", "current_power", "current_amperage"]
  normal:
    interval: 30
    registers: ["voltage_l1", "voltage_l2", "voltage_l3", "current_l1", "current_l2", "current_l3", "temperature_internal", "temperature_plug"]
  slow:
    interval: 300
    registers: ["energy_current_session", "energy_total"]

validation:
  voltage:
    min: 180
    max: 270
  current:
    min: 0
    max: 32
  temperature:
    min: -20
    max: 90
  power:
    min: 0
    max: 22000

automations:
  - name: "error_notification"
    trigger:
      platform: state
      entity_id: sensor.error_code
      from: "0"
      to: "!= 0"
    action:
      service: notify.notify
      data:
        title: "{{ 'notification.charging.error.title'|translate }}"
        message: "{{ 'notification.charging.error.message'|translate(error_code=states('sensor.error_code')) }}"

  - name: "charging_completed"
    trigger:
      platform: state
      entity_id: sensor.charging_status
      from: "2"
      to: "1"
      for: "00:00:10"
    action:
      service: notify.notify
      data:
        title: "{{ 'notification.charging.completed.title'|translate }}"
        message: "{{ 'notification.charging.completed.message'|translate(energy=states('sensor.energy_current_session')) }}"

  - name: "high_temperature_warning"
    trigger:
      platform: numeric_state
      entity_id: sensor.temperature_internal
      above: 60
      for: "00:02:00"
    action:
      service: notify.notify
      data:
        title: "{{ 'notification.charging.temperature.warning.title'|translate }}"
        message: "{{ 'notification.charging.temperature.warning.message'|translate(temperature=states('sensor.temperature_internal')) }}"

helpers:
  templates:
    - name: "charging_efficiency"
      value: >
        {% set power_ac = states('sensor.current_power')|float %}
        {% set power_dc = states('sensor.charging_power_dc')|float %}
        {{ (power_dc / power_ac * 100)|round(1) if power_ac > 0 else 0 }}
      translation_key: "sensor.charging.metrics.efficiency"

    - name: "phase_balance"
      value: >
        {% set l1 = states('sensor.current_l1')|float %}
        {% set l2 = states('sensor.current_l2')|float %}
        {% set l3 = states('sensor.current_l3')|float %}
        {% set max_diff = max(l1, l2, l3) - min(l1, l2, l3) %}
        {% set total = l1 + l2 + l3 %}
        {{ (max_diff / total * 100)|round(1) if total > 0 else 0 }}
      translation_key: "sensor.charging.metrics.phase_balance"