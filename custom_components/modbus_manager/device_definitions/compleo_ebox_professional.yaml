registers:
  read:
    # Basis-Informationen
    - { name: "geraete_typ", address: 0, type: "uint16", description: "Gerätetyp-Identifikation" }
    - { name: "seriennummer", address: 2, type: "string", count: 8, description: "Seriennummer des Geräts" }
    - { name: "firmware_version", address: 10, type: "uint16", scale: 0.01, description: "Firmware Version" }
    
    # Ladestatus
    - { name: "ladestatus", address: 100, type: "uint16", description: "Aktueller Ladestatus (0: Bereit, 1: Fahrzeug verbunden, 2: Lädt, 3: Fehler)" }
    - { name: "stecker_verriegelt", address: 101, type: "uint16", description: "Status der Steckerverriegelung" }
    - { name: "fahrzeug_verbunden", address: 102, type: "uint16", description: "Fahrzeug verbunden Status" }
    
    # Leistungsdaten
    - { name: "aktuelle_leistung", address: 200, type: "uint32", unit_of_measurement: "W", device_class: "power", state_class: "measurement", scale: 1, swap: "word" }
    - { name: "aktuelle_stromstaerke", address: 202, type: "uint16", unit_of_measurement: "A", device_class: "current", state_class: "measurement", scale: 0.1 }
    - { name: "maximale_stromstaerke", address: 203, type: "uint16", unit_of_measurement: "A", device_class: "current", state_class: "measurement", scale: 0.1 }
    
    # Spannungen und Ströme pro Phase
    - { name: "spannung_l1", address: 300, type: "uint16", unit_of_measurement: "V", device_class: "voltage", state_class: "measurement", scale: 0.1 }
    - { name: "strom_l1", address: 301, type: "uint16", unit_of_measurement: "A", device_class: "current", state_class: "measurement", scale: 0.1 }
    - { name: "spannung_l2", address: 302, type: "uint16", unit_of_measurement: "V", device_class: "voltage", state_class: "measurement", scale: 0.1 }
    - { name: "strom_l2", address: 303, type: "uint16", unit_of_measurement: "A", device_class: "current", state_class: "measurement", scale: 0.1 }
    - { name: "spannung_l3", address: 304, type: "uint16", unit_of_measurement: "V", device_class: "voltage", state_class: "measurement", scale: 0.1 }
    - { name: "strom_l3", address: 305, type: "uint16", unit_of_measurement: "A", device_class: "current", state_class: "measurement", scale: 0.1 }
    
    # Energiezähler
    - { name: "energie_aktueller_ladevorgang", address: 400, type: "uint32", unit_of_measurement: "kWh", device_class: "energy", state_class: "total", scale: 0.1, swap: "word" }
    - { name: "energie_gesamt", address: 402, type: "uint32", unit_of_measurement: "kWh", device_class: "energy", state_class: "total_increasing", scale: 0.1, swap: "word" }
    
    # Temperaturen
    - { name: "temperatur_intern", address: 500, type: "int16", unit_of_measurement: "°C", device_class: "temperature", state_class: "measurement", scale: 0.1 }
    - { name: "temperatur_stecker", address: 501, type: "int16", unit_of_measurement: "°C", device_class: "temperature", state_class: "measurement", scale: 0.1 }
    
    # Status und Fehler
    - { name: "fehlercode", address: 600, type: "uint16", description: "Aktueller Fehlercode" }
    - { name: "warncode", address: 601, type: "uint16", description: "Aktueller Warncode" }

  write:
    # Steuerungsregister
    - { name: "ladestation_freigeben", address: 1000, type: "uint16", description: "Ladestation freigeben (0: Gesperrt, 1: Freigegeben)" }
    - { name: "max_ladestrom", address: 1001, type: "uint16", description: "Maximaler Ladestrom in A" }
    - { name: "laden_starten_stoppen", address: 1002, type: "uint16", description: "Ladevorgang starten/stoppen (0: Stop, 1: Start)" }
    - { name: "stecker_entriegeln", address: 1003, type: "uint16", description: "Stecker entriegeln (1: Entriegeln)" }

automations:
  - name: "Fehlerbenachrichtigung"
    trigger:
      platform: state
      entity_id: sensor.fehlercode
      from: "0"
    action:
      service: notify.notify
      data:
        title: "Ladestation Fehler"
        message: "Die Ladestation meldet einen Fehler (Code: {{ states('sensor.fehlercode') }})"

  - name: "Ladevorgang Beendet"
    trigger:
      platform: state
      entity_id: sensor.ladestatus
      from: "2"
      to: "1"
    action:
      service: notify.notify
      data:
        title: "Ladevorgang Beendet"
        message: "Ladevorgang abgeschlossen. Geladene Energie: {{ states('sensor.energie_aktueller_ladevorgang') }} kWh"

  - name: "Hohe Temperatur Warnung"
    trigger:
      platform: numeric_state
      entity_id: sensor.temperatur_intern
      above: 60
    action:
      service: notify.notify
      data:
        title: "Ladestation Temperaturwarnung"
        message: "Die Temperatur der Ladestation ist über 60°C gestiegen!"