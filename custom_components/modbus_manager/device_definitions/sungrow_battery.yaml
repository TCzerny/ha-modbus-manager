# Sungrow Batteriesystem

device_info:
  name: "Sungrow Battery System"
  manufacturer: "Sungrow"
  model: "Battery"
  supports_load_management: false

registers:
  read:
    # Battery Status
    - { name: "battery_voltage", address: 13020, type: "uint16", unit_of_measurement: "V", device_class: "voltage", state_class: "measurement", scale: 0.1 }
    - { name: "battery_current", address: 13021, type: "int16", unit_of_measurement: "A", device_class: "current", state_class: "measurement", scale: 0.1 }
    - { name: "battery_power", address: 13022, type: "int32", unit_of_measurement: "W", device_class: "power", state_class: "measurement" }
    - { name: "battery_level", address: 13024, type: "uint16", unit_of_measurement: "%", device_class: "battery", state_class: "measurement" }
    - { name: "battery_health", address: 13025, type: "uint16", unit_of_measurement: "%", state_class: "measurement" }
    - { name: "battery_temperature", address: 13026, type: "int16", unit_of_measurement: "Â°C", device_class: "temperature", state_class: "measurement", scale: 0.1 }

    # Energy Statistics
    - { name: "daily_battery_charge", address: 13034, type: "uint32", unit_of_measurement: "kWh", device_class: "energy", state_class: "total_increasing", scale: 0.1 }
    - { name: "total_battery_charge", address: 13036, type: "uint32", unit_of_measurement: "kWh", device_class: "energy", state_class: "total_increasing", scale: 0.1 }
    - { name: "daily_battery_discharge", address: 13038, type: "uint32", unit_of_measurement: "kWh", device_class: "energy", state_class: "total_increasing", scale: 0.1 }
    - { name: "total_battery_discharge", address: 13040, type: "uint32", unit_of_measurement: "kWh", device_class: "energy", state_class: "total_increasing", scale: 0.1 }

  write:
    # Battery Control
    - { name: "battery_charge_limit", address: 13100, type: "uint16", min: 0, max: 100 }
    - { name: "battery_discharge_limit", address: 13101, type: "uint16", min: 0, max: 100 }
    - { name: "forced_charging", address: 13102, type: "uint16", min: 0, max: 1 }

polling:
  fast:
    interval: 10
    registers: [
      "battery_power",
      "battery_level"
    ]
  normal:
    interval: 30
    registers: [
      "battery_voltage",
      "battery_current",
      "battery_temperature"
    ]
  slow:
    interval: 300
    registers: [
      "daily_battery_charge", "total_battery_charge"
    ]

validation:
  battery_level:
    min: 0
    max: 100
  battery_temperature:
    min: -20
    max: 60

automations:
  - name: "battery_low_notification"
    trigger:
      platform: numeric_state
      entity_id: sensor.battery_level
      below: 10
      for: "00:10:00"
    action:
      service: notify.notify
      data:
        title: "{{ 'notification.battery.low.title'|translate }}"
        message: "{{ 'notification.battery.low.message'|translate(level=states('sensor.battery_level')) }}"

  - name: "high_battery_temperature_warning"
    trigger:
      platform: numeric_state
      entity_id: sensor.battery_temperature
      above: 45
      for: "00:05:00"
    action:
      service: notify.notify
      data:
        title: "{{ 'notification.battery.temperature.warning.title'|translate }}"
        message: "{{ 'notification.battery.temperature.warning.message'|translate(temperature=states('sensor.battery_temperature')) }}"

helpers:
  templates:
    - name: "battery_power_direction"
      value: >
        {% set power = states('sensor.battery_power')|float %}
        {% if power > 0 %}
          {{ 'state.battery.discharging'|translate }}
        {% elif power < 0 %}
          {{ 'state.battery.charging'|translate }}
        {% else %}
          {{ 'state.battery.idle'|translate }}
        {% endif %}
      translation_key: "sensor.battery.power_direction"

device_specific_templates:
  - name: "battery_status"
    value: >
      {% set power = states('sensor.{{device_name}}_battery_power')|float(0) %}
      {% if power > 0 %}
        Entladen
      {% elif power < 0 %}
        Laden
      {% else %}
        Standby
      {% endif %}

