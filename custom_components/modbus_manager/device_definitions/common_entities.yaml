# Common entities for all Sungrow devices

registers:
  read:
    # Device Information
    - { name: "device_type", address: 0, type: "uint16", translation_key: "sensor.device.info.type", entity_category: "diagnostic" }
    - { name: "serial_number", address: 2, type: "string", count: 8, translation_key: "sensor.device.info.serial_number", entity_category: "diagnostic" }
    - { name: "firmware_version", address: 10, type: "uint16", scale: 0.01, translation_key: "sensor.device.info.firmware_version", entity_category: "diagnostic" }
    - { name: "protocol_version", address: 12, type: "uint16", scale: 0.01, translation_key: "sensor.device.info.protocol_version", entity_category: "diagnostic" }
    
    # Device Status
    - { name: "operating_state", address: 100, type: "uint16", translation_key: "sensor.device.status.state", entity_category: "diagnostic" }
    - { name: "error_code", address: 101, type: "uint16", translation_key: "sensor.device.status.error_code", entity_category: "diagnostic" }
    - { name: "warning_code", address: 102, type: "uint16", translation_key: "sensor.device.status.warning_code", entity_category: "diagnostic" }
    
    # Network Information
    - { name: "ip_address", address: 200, type: "string", count: 4, translation_key: "sensor.device.network.ip", entity_category: "diagnostic" }
    - { name: "subnet_mask", address: 204, type: "string", count: 4, translation_key: "sensor.device.network.subnet", entity_category: "diagnostic" }
    - { name: "gateway", address: 208, type: "string", count: 4, translation_key: "sensor.device.network.gateway", entity_category: "diagnostic" }
    - { name: "modbus_address", address: 212, type: "uint16", translation_key: "sensor.device.network.modbus_address", entity_category: "diagnostic" }
    
    # System Time
    - { name: "system_time", address: 300, type: "uint32", translation_key: "sensor.device.system.time", entity_category: "diagnostic" }
    - { name: "running_time", address: 302, type: "uint32", unit_of_measurement: "h", state_class: "total_increasing", translation_key: "sensor.device.system.runtime", entity_category: "diagnostic" }
    
    # Environmental Data
    - { name: "ambient_temperature", address: 400, type: "int16", unit_of_measurement: "°C", device_class: "temperature", state_class: "measurement", scale: 0.1, translation_key: "sensor.device.environment.temperature" }
    - { name: "enclosure_temperature", address: 401, type: "int16", unit_of_measurement: "°C", device_class: "temperature", state_class: "measurement", scale: 0.1, translation_key: "sensor.device.environment.temperature_enclosure" }

  write:
    # System Control
    - { name: "system_time", address: 1000, type: "uint32", translation_key: "register.device.system.time", entity_category: "config" }
    - { name: "modbus_address", address: 1001, type: "uint16", translation_key: "register.device.network.modbus_address", entity_category: "config" }
    - { name: "restart_device", address: 1002, type: "uint16", translation_key: "register.device.system.restart", entity_category: "config" }

polling:
  fast:
    interval: 10
    registers: ["operating_state", "error_code", "warning_code"]
  normal:
    interval: 30
    registers: ["ambient_temperature", "enclosure_temperature"]
  slow:
    interval: 300
    registers: ["running_time", "system_time"]

validation:
  temperature:
    min: -20
    max: 90
  modbus_address:
    min: 1
    max: 247
  system_time:
    min: 946684800  # 2000-01-01
    max: 2524608000  # 2050-01-01

automations:
  - name: "error_notification"
    trigger:
      platform: state
      entity_id: sensor.error_code
      from: "0"
      to: "!= 0"
    action:
      service: notify.notify
      data:
        title: "{{ 'notification.device.error.title'|translate }}"
        message: "{{ 'notification.device.error.message'|translate(error_code=states('sensor.error_code')) }}"

  - name: "high_temperature_warning"
    trigger:
      platform: numeric_state
      entity_id: sensor.enclosure_temperature
      above: 75
      for: "00:02:00"
    action:
      service: notify.notify
      data:
        title: "{{ 'notification.device.temperature.warning.title'|translate }}"
        message: "{{ 'notification.device.temperature.warning.message'|translate(temperature=states('sensor.enclosure_temperature')) }}"

  - name: "system_time_sync"
    trigger:
      platform: time_pattern
      hours: "/12"
    action:
      service: modbus.write
      data:
        hub: modbus_hub
        address: 1000
        value: "{{ now().timestamp()|int }}"

helpers:
  templates:
    - name: "uptime_days"
      value: >
        {% set hours = states('sensor.running_time')|float %}
        {{ (hours / 24)|round(1) }}
      translation_key: "sensor.device.metrics.uptime_days"

    - name: "temperature_difference"
      value: >
        {% set ambient = states('sensor.ambient_temperature')|float %}
        {% set enclosure = states('sensor.enclosure_temperature')|float %}
        {{ (enclosure - ambient)|round(1) }}
      translation_key: "sensor.device.metrics.temperature_difference"